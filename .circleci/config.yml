version: 2.1

defaults: &defaults
  parameters:
    node_version:
      type: string
      default: ""

commands:
  npmrc:
    steps:
      - run:
          name: Create .npmrc
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc

  setup_git:
    steps:
      - run:
          name: "Setup git environment"
          command: git config --global core.autocrlf false

  install_node_npm:
    <<: *defaults
    description: Install specific version of Node
    steps:
      - run:
          name: Installing node version << parameters.node_version >>
          command: nvm install << parameters.node_version >>
      - run:
          name: Using node version << parameters.node_version >>
          command: nvm use << parameters.node_version >>

  show_node_npm_version:
    description: Log Node and npm version
    steps:
      - run:
          name: Node version
          command: node --version
      - run:
          name: NPM version
          command: npm --version

  install_deps:
    description: Install dependencies
    steps:
      - run:
          name: Install npm dependencies
          command: npm install

  install_swift:
    description: Install swift
    steps:
      # - restore_cache:
      #     keys:
      #       - swift-binary
      # - run:
      #     name: Downloading swift
      #     command: |
      #       [ -e swift-5.7.1-RELEASE-ubuntu20.04-aarch64.tar.gz ] &&  exit 0 || echo "Downloading file"
      #       curl -O https://download.swift.org/swift-5.7.1-release/ubuntu2004-aarch64/swift-5.7.1-RELEASE/swift-5.7.1-RELEASE-ubuntu20.04-aarch64.tar.gz
      # - save_cache:
      #     key: swift-binary
      #     paths:
      #       - swift-5.7.1-RELEASE-ubuntu20.04-aarch64.tar.gz
      - run:
          name: Installing swift
          command: |
            sudo apt update
            sudo apt install clang libicu-dev libpython2.7-dev libtinfo5 libncurses5 libpython2.7 libz3-dev
            curl -O https://download.swift.org/swift-5.7.1-release/ubuntu2004-aarch64/swift-5.7.1-RELEASE/swift-5.7.1-RELEASE-ubuntu20.04-aarch64.tar.gz
            tar xzf swift-5.7.1-RELEASE-ubuntu20.04-aarch64.tar.gz
            rm -f swift-5.7.1-RELEASE-ubuntu20.04-aarch64.tar.gz
            sudo mv swift-5.7.1-RELEASE-ubuntu20.04-aarch64 /usr/share/swift
            echo 'export PATH=/usr/share/swift/usr/bin:$PATH' >> ~/.bashrc
            source  ~/.bashrc
            chmod +x /usr/share/swift/usr/bin/swift
            /usr/share/swift/usr/bin/swift --help | cat
jobs:
  lint:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    steps:
      - checkout
      - show_node_npm_version
      - install_deps
      - run:
          name: Run lint
          command: npm run lint

  test-unix:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    steps:
      - checkout
      - show_node_npm_version
      - install_deps
      - install_swift
      - run:
          name: Run tests
          command: npm run unit-test

  release:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    resource_class: small
    steps:
      - checkout
      - install_deps
      - run:
          name: Release
          command: npx semantic-release --branches main

workflows:
  version: 2
  test_and_release:
    jobs:
      - lint:
          name: lint
          context: nodejs-install
          node_version: "12"

      # UNIX tests
      - test-unix:
          name: Unix Tests for Node << matrix.node_version >>
          context: nodejs-install
          requires:
            - lint
          matrix:
            parameters:
              node_version: ["16.13.1", "14.18.2", "12.22.7"]

      - release:
          name: Release
          context: nodejs-lib-release
          node_version: "lts"
          requires:
            - lint
            - test-unix
          filters:
            branches:
              only:
                - main